<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Elegant Music Player</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Helvetica Neue', sans-serif;
        }

        body {
            background: #0f172a;
            color: #e2e8f0;
            min-height: 100vh;
            padding: 2rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .container {
            max-width: 1200px;
            width: 100%;
            padding: 2rem;
            background: rgba(30, 41, 59, 0.7);
            backdrop-filter: blur(20px);
            border-radius: 24px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
        }

        header {
            text-align: center;
            margin-bottom: 3rem;
        }

        h1 {
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(135deg, #e2e8f0, #94a3b8);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 1rem;
        }

        .player {
            background: rgba(15, 23, 42, 0.6);
            padding: 2rem;
            border-radius: 20px;
            position: relative;
            overflow: hidden;
        }

        .visualizer {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 100px;
            display: flex;
            align-items: flex-end;
            justify-content: space-between;
            padding: 0 2rem;
            opacity: 0.5;
        }

        .bar {
            width: 8px;
            background: #60a5fa;
            border-radius: 4px;
            transition: height 0.2s ease;
        }

        .album-art {
            width: 300px;
            height: 300px;
            margin: 0 auto 2rem;
            border-radius: 20px;
            overflow: hidden;
            position: relative;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            transition: transform 0.3s ease;
        }

        .album-art:hover {
            transform: scale(1.02);
        }

        .album-art.playing {
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.02); }
            100% { transform: scale(1); }
        }

        .controls {
            display: flex;
            justify-content: center;
            gap: 2rem;
            margin-bottom: 2rem;
            position: relative;
            z-index: 1;
        }

        .btn {
            background: rgba(96, 165, 250, 0.1);
            border: 2px solid #60a5fa;
            padding: 1rem 2rem;
            border-radius: 12px;
            cursor: pointer;
            font-size: 1rem;
            color: #e2e8f0;
            transition: all 0.3s ease;
            backdrop-filter: blur(4px);
        }

        .btn:hover {
            background: #60a5fa;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(96, 165, 250, 0.3);
        }

        .playlist {
            list-style: none;
            position: relative;
            z-index: 1;
        }

        .song {
            padding: 1rem;
            margin-bottom: 0.5rem;
            background: rgba(96, 165, 250, 0.1);
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .song:hover {
            background: rgba(96, 165, 250, 0.2);
            transform: translateX(10px);
        }

        .song.playing {
            background: rgba(96, 165, 250, 0.3);
            border-left: 4px solid #60a5fa;
            animation: glow 2s infinite;
        }

        @keyframes glow {
            0% { box-shadow: 0 0 5px rgba(96, 165, 250, 0.5); }
            50% { box-shadow: 0 0 20px rgba(96, 165, 250, 0.5); }
            100% { box-shadow: 0 0 5px rgba(96, 165, 250, 0.5); }
        }

        .progress-container {
            position: relative;
            margin: 2rem 0;
        }

        .progress-bar {
            width: 100%;
            height: 6px;
            background: rgba(96, 165, 250, 0.2);
            border-radius: 3px;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .progress {
            width: 0%;
            height: 100%;
            background: #60a5fa;
            border-radius: 3px;
            position: relative;
            transition: width 0.1s linear;
        }

        .progress::after {
            content: '';
            position: absolute;
            right: -2px;
            top: 50%;
            transform: translateY(-50%);
            width: 12px;
            height: 12px;
            background: #60a5fa;
            border-radius: 50%;
            box-shadow: 0 0 10px rgba(96, 165, 250, 0.5);
        }

        .time-display {
            display: flex;
            justify-content: space-between;
            color: #94a3b8;
            font-size: 0.9rem;
            margin-top: 0.5rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>Elegant Soundscape</h1>
        </header>

        <div class="player">
            <div class="album-art">
                <img src="/api/placeholder/300/300" alt="Album Art" />
            </div>

            <div class="visualizer">
                <!-- Audio visualizer bars -->
                <div class="bar"></div><div class="bar"></div><div class="bar"></div>
                <div class="bar"></div><div class="bar"></div><div class="bar"></div>
                <div class="bar"></div><div class="bar"></div><div class="bar"></div>
                <div class="bar"></div><div class="bar"></div><div class="bar"></div>
                <div class="bar"></div><div class="bar"></div><div class="bar"></div>
                <div class="bar"></div><div class="bar"></div><div class="bar"></div>
                <div class="bar"></div><div class="bar"></div>
            </div>

            <div class="progress-container">
                <div class="progress-bar">
                    <div class="progress"></div>
                </div>
                <div class="time-display">
                    <span id="current-time">0:00</span>
                    <span id="duration">0:00</span>
                </div>
            </div>

            <div class="controls">
                <button class="btn" id="prev">Previous</button>
                <button class="btn" id="play">Play</button>
                <button class="btn" id="next">Next</button>
            </div>

            <ul class="playlist">
                <li class="song playing">
                    <span>1. Midnight Jazz</span>
                    <span>5:24</span>
                </li>
                <li class="song">
                    <span>2. Electric Dreams</span>
                    <span>4:16</span>
                </li>
                <li class="song">
                    <span>3. Urban Symphony</span>
                    <span>3:58</span>
                </li>
                <li class="song">
                    <span>4. Crystal Waves</span>
                    <span>4:45</span>
                </li>
                <li class="song">
                    <span>5. Neon Lights</span>
                    <span>6:12</span>
                </li>
            </ul>
        </div>
    </div>

    <script>
        const playBtn = document.getElementById('play');
        const prevBtn = document.getElementById('prev');
        const nextBtn = document.getElementById('next');
        const songs = document.querySelectorAll('.song');
        const progress = document.querySelector('.progress');
        const progressBar = document.querySelector('.progress-bar');
        const currentTimeDisplay = document.getElementById('current-time');
        const durationDisplay = document.getElementById('duration');
        const albumArt = document.querySelector('.album-art');
        const bars = document.querySelectorAll('.bar');

        let isPlaying = false;
        let currentSong = 0;

        function togglePlay() {
            isPlaying = !isPlaying;
            playBtn.textContent = isPlaying ? 'Pause' : 'Play';
            albumArt.classList.toggle('playing', isPlaying);
            
            if (isPlaying) {
                startProgressSimulation();
                startVisualizerAnimation();
            } else {
                stopProgressSimulation();
                stopVisualizerAnimation();
            }
        }

        function changeSong(index) {
            songs.forEach(song => song.classList.remove('playing'));
            songs[index].classList.add('playing');
            currentSong = index;
            
            if (isPlaying) {
                resetProgress();
                startProgressSimulation();
            }
        }

        let progressInterval;
        let currentProgress = 0;
        let visualizerInterval;

        function startVisualizerAnimation() {
            visualizerInterval = setInterval(() => {
                bars.forEach(bar => {
                    const height = Math.random() * 100;
                    bar.style.height = `${height}px`;
                });
            }, 100);
        }

        function stopVisualizerAnimation() {
            clearInterval(visualizerInterval);
            bars.forEach(bar => {
                bar.style.height = '0px';
            });
        }

        function startProgressSimulation() {
            progressInterval = setInterval(() => {
                currentProgress += 0.1;
                if (currentProgress >= 100) {
                    currentProgress = 0;
                    nextSong();
                }
                updateProgress();
            }, 100);
        }

        function stopProgressSimulation() {
            clearInterval(progressInterval);
        }

        function resetProgress() {
            currentProgress = 0;
            updateProgress();
        }

        function updateProgress() {
            progress.style.width = `${currentProgress}%`;
            
            const duration = 324; // 5:24 in seconds
            const currentTime = Math.floor((duration * currentProgress) / 100);
            currentTimeDisplay.textContent = formatTime(currentTime);
            durationDisplay.textContent = formatTime(duration);
        }

        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const remainingSeconds = Math.floor(seconds % 60);
            return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;
        }

        function nextSong() {
            const nextIndex = (currentSong + 1) % songs.length;
            changeSong(nextIndex);
        }

        function previousSong() {
            const prevIndex = (currentSong - 1 + songs.length) % songs.length;
            changeSong(prevIndex);
        }

        playBtn.addEventListener('click', togglePlay);
        nextBtn.addEventListener('click', () => {
            nextSong();
            resetProgress();
        });
        prevBtn.addEventListener('click', () => {
            previousSong();
            resetProgress();
        });

        progressBar.addEventListener('click', (e) => {
            const rect = progressBar.getBoundingClientRect();
            const percent = ((e.clientX - rect.left) / rect.width) * 100;
            currentProgress = percent;
            updateProgress();
        });

        songs.forEach((song, index) => {
            song.addEventListener('click', () => {
                changeSong(index);
                resetProgress(); 
                if (!isPlaying) {
                    togglePlay();
                }
            });
        }); 
    </script>
</body>
</html>